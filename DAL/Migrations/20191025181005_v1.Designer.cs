// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    [Migration("20191025181005_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<bool>("Done");

                    b.Property<string>("EnteredBy");

                    b.Property<DateTime>("EnteredDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("IsDeletedBy");

                    b.Property<string>("IsDeletedDate");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("LastUpdatedBy");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Situation")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientClassfication")
                        .HasMaxLength(20);

                    b.Property<string>("ClientSource")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("EnteredBy");

                    b.Property<DateTime>("EnteredDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("IsDeletedBy");

                    b.Property<string>("IsDeletedDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Residence")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("SalesMan")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Telephone1")
                        .HasMaxLength(15);

                    b.Property<string>("Telephone2")
                        .HasMaxLength(15);

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Models.Call", b =>
                {
                    b.HasOne("Models.Client", "Client")
                        .WithMany("Calls")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
